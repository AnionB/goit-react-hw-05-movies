{"version":3,"file":"static/js/541.0cc254b9.chunk.js","mappings":"kMA8BA,UA1BA,SAAcA,GACZ,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAiBC,EAAjB,KAIA,IAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAASN,GAASO,KAAKH,KACtB,CAACJ,IACAG,EACF,OACE,wBACGA,EAASK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACZ,0BACGA,IACC,gBACEC,IAAG,0CAAqCD,GACxCE,IAAKJ,KAGT,uBAAIA,KACJ,uCAAeC,OARRF,U,0MCZbM,EAAM,mCACNC,EAAU,gCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,2FACCC,EADD,UACUF,EADV,sCAC+CD,GAD/C,kBAGEI,IAAAA,IAAUD,GAAKX,MAAK,SAAAa,GACzB,OAAOA,EAASC,KAAKC,QAAQd,KAAI,kBAA6B,CAC5DC,GAD+B,EAAGA,GAElCc,eAF+B,EAAOA,uBAJrC,kEAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBC,GAAxB,8EACCP,EADD,UACUF,EADV,gCACyCD,EADzC,2BAC+DU,EAD/D,iDAGEN,IAAAA,IAAUD,GAAKX,MAAK,SAAAa,GACzB,OAAOA,EAASC,KAAKC,QAAQd,KAAI,kBAA6B,CAC5DC,GAD+B,EAAGA,GAElCc,eAF+B,EAAOA,uBAJrC,kEAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4B1B,GAA5B,8EACCkB,EADD,WACWF,EADX,iBAC2BhB,EAD3B,oBAC8Ce,EAD9C,qCAGEI,IAAAA,IAAUD,GAAKX,MAAK,SAAAa,GACzB,MAOIA,EAASC,KAEb,MAAO,CACLE,eAVF,EACEA,eAUAI,aAXF,EAEEA,aAUAC,SAZF,EAGEA,SAUAC,OAbF,EAIEA,OAUAC,YAdF,EAKEA,YAUAC,aAfF,EAMEA,kBAVC,kEAuBA,SAAezB,EAAtB,+CAAO,OAAP,oBAAO,WAAwBN,GAAxB,8EACCkB,EADD,WACWF,EADX,iBAC2BhB,EAD3B,4BACsDe,EADtD,sCAGEI,IAAAA,IAAUD,GAAKX,MAAK,SAAAa,GACzB,OAAOA,EAASC,KAAKW,KAAKxB,KAAI,kBAA4C,CACxEC,GAD4B,EAAGA,GAE/BC,KAF4B,EAAOA,KAGnCC,UAH4B,EAAaA,UAIzCC,aAJ4B,EAAwBA,qBAJnD,kEAaA,SAAeqB,EAAtB,+CAAO,OAAP,oBAAO,WAAyBjC,GAAzB,8EACCkB,EADD,WACWF,EADX,iBAC2BhB,EAD3B,4BACsDe,EADtD,sCAGEI,IAAAA,IAAUD,GAAKX,MAAK,SAAAa,GACzB,OAAOA,EAASC,KAAKC,QAAQd,KAAI,kBAA8B,CAC7D0B,OAD+B,EAAGA,OAElCC,QAF+B,EAAWA,QAG1C1B,GAH+B,EAAoBA,WAJlD","sources":["components/Cast/Cast.js","components/FetchData/FetchData.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCasts } from 'components/FetchData/FetchData';\n\nfunction Cast(props) {\n  const { movieId } = useParams();\n  const [castInfo, setCast] = useState();\n  useEffect(() => {\n    getCasts(movieId).then(setCast);\n  }, [movieId]);\n  if (castInfo) {\n    return (\n      <ul>\n        {castInfo.map(({ id, name, character, profile_path }) => (\n          <li key={id}>\n            {profile_path && (\n              <img\n                src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n                alt={name}\n              />\n            )}\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Cast;\n","import axios from 'axios';\n\nconst key = '666fc90c25c7aa270f86bc901474e203';\nconst mainURL = 'https://api.themoviedb.org/3/';\n\nexport async function getPopularMovie() {\n  const url = `${mainURL}trending/movie/day?api_key=${key}`;\n\n  return axios.get(url).then(response => {\n    return response.data.results.map(({ id, original_title }) => ({\n      id,\n      original_title,\n    }));\n  });\n}\n\nexport async function getMovie(query) {\n  const url = `${mainURL}search/movie?api_key=${key}&language=en-US&${query}&page=1&include_adult=false`;\n\n  return axios.get(url).then(response => {\n    return response.data.results.map(({ id, original_title }) => ({\n      id,\n      original_title,\n    }));\n  });\n}\n\nexport async function getMovieInfo(movieId) {\n  const url = ` ${mainURL}movie/${movieId}?api_key=${key}&language=en-US`;\n\n  return axios.get(url).then(response => {\n    const {\n      original_title,\n      vote_average,\n      overview,\n      genres,\n      poster_path,\n      release_date,\n    } = response.data;\n\n    return {\n      original_title,\n      vote_average,\n      overview,\n      genres,\n      poster_path,\n      release_date,\n    };\n  });\n}\nexport async function getCasts(movieId) {\n  const url = ` ${mainURL}movie/${movieId}/credits?api_key=${key}&language=en-US `;\n\n  return axios.get(url).then(response => {\n    return response.data.cast.map(({ id, name, character, profile_path }) => ({\n      id,\n      name,\n      character,\n      profile_path,\n    }));\n  });\n}\n\nexport async function getReview(movieId) {\n  const url = ` ${mainURL}movie/${movieId}/reviews?api_key=${key}&language=en-US `;\n\n  return axios.get(url).then(response => {\n    return response.data.results.map(({ author, content, id }) => ({\n      author,\n      content,\n      id,\n    }));\n  });\n}\n"],"names":["props","movieId","useParams","useState","castInfo","setCast","useEffect","getCasts","then","map","id","name","character","profile_path","src","alt","key","mainURL","getPopularMovie","url","axios","response","data","results","original_title","getMovie","query","getMovieInfo","vote_average","overview","genres","poster_path","release_date","cast","getReview","author","content"],"sourceRoot":""}