{"version":3,"file":"static/js/785.9246099d.chunk.js","mappings":"4TAEMA,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,2FACCC,EADD,kEACkEF,GADlE,kBAGEG,IAAAA,IAAUD,GAAKE,MAAK,SAAAC,GACzB,OAAOA,EAASC,KAAKC,QAAQC,KAAI,kBAA6B,CAC5DC,GAD+B,EAAGA,GAElCC,eAF+B,EAAOA,uBAJrC,kEAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBC,GAAxB,8EACCV,EADD,4DAC4DF,EAD5D,2BACkFY,EADlF,iDAGET,IAAAA,IAAUD,GAAKE,MAAK,SAAAC,GAEzB,OAAOA,EAASC,KAAKC,QAAQC,KAAI,kBAA6B,CAC5DC,GAD+B,EAAGA,GAElCC,eAF+B,EAAOA,uBALrC,kEAYA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,8EACCZ,EADD,8CAC8CY,EAD9C,oBACiEd,EADjE,qCAGEG,IAAAA,IAAUD,GAAKE,MAAK,SAAAC,GACzB,MAOIA,EAASC,KAEb,MAAO,CACLI,eAVF,EACEA,eAUAK,aAXF,EAEEA,aAUAC,SAZF,EAGEA,SAUAC,OAbF,EAIEA,OAUAC,YAdF,EAKEA,YAUAC,aAfF,EAMEA,kBAVC,kEAuBA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBN,GAAxB,8EACCZ,EADD,8CAC8CY,EAD9C,4BACyEd,EADzE,sCAGEG,IAAAA,IAAUD,GAAKE,MAAK,SAAAC,GACzB,OAAOA,EAASC,KAAKe,KAAKb,KAAI,kBAA4C,CACxEC,GAD4B,EAAGA,GAE/Ba,KAF4B,EAAOA,KAGnCC,UAH4B,EAAaA,UAIzCC,aAJ4B,EAAwBA,qBAJnD,kEAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBX,GAAzB,8EACCZ,EADD,8CAC8CY,EAD9C,4BACyEd,EADzE,sCAGEG,IAAAA,IAAUD,GAAKE,MAAK,SAAAC,GACzB,OAAOA,EAASC,KAAKC,QAAQC,KAAI,kBAA8B,CAC7DkB,OAD+B,EAAGA,OAElCC,QAF+B,EAAWA,QAG1ClB,GAH+B,EAAoBA,WAJlD,oE,gFCrCP,UAtBA,WACE,IAAQK,GAAYc,EAAAA,EAAAA,MAAZd,QACR,GAA4Be,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KAIA,IAHAC,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAUX,GAASV,KAAK2B,KACvB,CAACjB,IACAgB,EACF,OAAOA,EAAOG,OAAS,GACrB,wBACGH,EAAOtB,KAAI,gBAAGkB,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASlB,EAApB,EAAoBA,GAApB,OACV,2BACE,sCAAciB,MACd,6BAAKC,OAFElB,SAOb","sources":["components/FetchData/FetchData.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst key = '666fc90c25c7aa270f86bc901474e203';\n\nexport async function getPopularMovie() {\n  const url = `https://api.themoviedb.org/3/trending/movie/day?api_key=${key}`;\n\n  return axios.get(url).then(response => {\n    return response.data.results.map(({ id, original_title }) => ({\n      id,\n      original_title,\n    }));\n  });\n}\n\nexport async function getMovie(query) {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=${key}&language=en-US&${query}&page=1&include_adult=false`;\n\n  return axios.get(url).then(response => {\n    // console.log(response.data.results);\n    return response.data.results.map(({ id, original_title }) => ({\n      id,\n      original_title,\n    }));\n  });\n}\n\nexport async function getMovieInfo(movieId) {\n  const url = ` https://api.themoviedb.org/3/movie/${movieId}?api_key=${key}&language=en-US`;\n\n  return axios.get(url).then(response => {\n    const {\n      original_title,\n      vote_average,\n      overview,\n      genres,\n      poster_path,\n      release_date,\n    } = response.data;\n\n    return {\n      original_title,\n      vote_average,\n      overview,\n      genres,\n      poster_path,\n      release_date,\n    };\n  });\n}\nexport async function getCasts(movieId) {\n  const url = ` https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${key}&language=en-US `;\n\n  return axios.get(url).then(response => {\n    return response.data.cast.map(({ id, name, character, profile_path }) => ({\n      id,\n      name,\n      character,\n      profile_path,\n    }));\n  });\n}\n\nexport async function getReview(movieId) {\n  const url = ` https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${key}&language=en-US `;\n\n  return axios.get(url).then(response => {\n    return response.data.results.map(({ author, content, id }) => ({\n      author,\n      content,\n      id,\n    }));\n  });\n}\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReview } from 'components/FetchData/FetchData';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [review, setReview] = useState();\n  useEffect(() => {\n    getReview(movieId).then(setReview);\n  }, [movieId]);\n  if (review) {\n    return review.length > 0 ? (\n      <ul>\n        {review.map(({ author, content, id }) => (\n          <li key={id}>\n            <h3> Author: {author}</h3>\n            <p> {content}</p>\n          </li>\n        ))}\n      </ul>\n    ) : (\n      <p>We don't have any reviews for this movie</p>\n    );\n  }\n}\n\nexport default Reviews;\n"],"names":["key","getPopularMovie","url","axios","then","response","data","results","map","id","original_title","getMovie","query","getMovieInfo","movieId","vote_average","overview","genres","poster_path","release_date","getCasts","cast","name","character","profile_path","getReview","author","content","useParams","useState","review","setReview","useEffect","length"],"sourceRoot":""}