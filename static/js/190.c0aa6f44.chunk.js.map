{"version":3,"file":"static/js/190.c0aa6f44.chunk.js","mappings":"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","sources":["components/Cast/Cast.js","components/Reviews/Reviews.js","webpack://goit-react-hw-05-movies/./src/components/BackBtn/BackBtn.module.css?2b72","components/BackBtn/BackBtn.js","webpack://goit-react-hw-05-movies/./src/components/MovieInfo/MovieInfo.module.css?df02","components/MovieInfo/MovieInfo.js","services/FetchData.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCasts } from '../../services/FetchData';\n\nfunction Cast(props) {\n  const { movieId } = useParams();\n  const [castInfo, setCast] = useState();\n  useEffect(() => {\n    getCasts(movieId).then(setCast);\n  }, [movieId]);\n  if (castInfo) {\n    return (\n      <ul>\n        {castInfo.map(({ id, name, character, profile_path }) => (\n          <li key={id}>\n            {profile_path && (\n              <img\n                src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n                alt={name}\n              />\n            )}\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Cast;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReview } from '../../services/FetchData';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [review, setReview] = useState();\n  useEffect(() => {\n    getReview(movieId).then(setReview);\n  }, [movieId]);\n  if (review) {\n    return review.length > 0 ? (\n      <ul>\n        {review.map(({ author, content, id }) => (\n          <li key={id}>\n            <h3> Author: {author}</h3>\n            <p> {content}</p>\n          </li>\n        ))}\n      </ul>\n    ) : (\n      <p>We don't have any reviews for this movie</p>\n    );\n  }\n}\n\nexport default Reviews;\n","// extracted by mini-css-extract-plugin\nexport default {\"btnBack\":\"BackBtn_btnBack__LA+5r\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './BackBtn.module.css';\n\nfunction BackBtn({ loc }) {\n  return (\n    <Link className={styles.btnBack} to={loc?.state?.from ?? '/'}>\n      &#10216;-Go back\n    </Link>\n  );\n}\nBackBtn.propTypes = {\n  loc: PropTypes.object.isRequired,\n};\n\nexport default BackBtn;\n","// extracted by mini-css-extract-plugin\nexport default {\"filmThumb\":\"MovieInfo_filmThumb__N4tPs\",\"additionalInfo\":\"MovieInfo_additionalInfo__1eqYM\",\"filmInfoThumb\":\"MovieInfo_filmInfoThumb__h5iL1\"};","import React, { useState, useEffect } from 'react';\nimport { Link, useParams, Routes, Route, useLocation } from 'react-router-dom';\n\nimport { getMovieInfo } from '../../services/FetchData';\n\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\nimport BackBtn from '../BackBtn/BackBtn';\n\nimport styles from './MovieInfo.module.css';\n\nfunction MovieInfo() {\n  const { movieId } = useParams();\n\n  const [filmInfo, setFilmInfo] = useState();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieInfo(movieId).then(setFilmInfo);\n  }, [movieId]);\n  if (filmInfo) {\n    const {\n      original_title,\n      vote_average,\n      overview,\n      genres,\n      poster_path,\n      release_date,\n    } = filmInfo;\n\n    return (\n      <>\n        <BackBtn loc={location} />\n\n        <div className={styles.filmThumb}>\n          <img\n            src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n            alt={`poster of ${original_title}`}\n          />\n          <div className={styles.filmInfoThumb}>\n            <h1>\n              {original_title}({new Date(release_date).getFullYear()})\n            </h1>\n            <p>User score: {vote_average}%</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <p>{genres.map(genre => genre.name).join(', ')}</p>\n          </div>\n        </div>\n        <div className={styles.additionalInfo}>\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <Link to={'cast'} state={location.state}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to={'reviews'} state={location.state}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </div>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </>\n    );\n  }\n}\n\nexport default MovieInfo;\n","import axios from 'axios';\n\nconst key = '666fc90c25c7aa270f86bc901474e203';\nconst mainURL = 'https://api.themoviedb.org/3/';\n\nexport async function getPopularMovie() {\n  const url = `${mainURL}trending/movie/day?api_key=${key}`;\n\n  return axios.get(url).then(response => {\n    return response.data.results.map(({ id, original_title }) => ({\n      id,\n      original_title,\n    }));\n  });\n}\n\nexport async function getMovie(query) {\n  const url = `${mainURL}search/movie?api_key=${key}&language=en-US&${query}&page=1&include_adult=false`;\n\n  return axios.get(url).then(response => {\n    return response.data.results.map(({ id, original_title }) => ({\n      id,\n      original_title,\n    }));\n  });\n}\n\nexport async function getMovieInfo(movieId) {\n  const url = ` ${mainURL}movie/${movieId}?api_key=${key}&language=en-US`;\n\n  return axios.get(url).then(response => {\n    const {\n      original_title,\n      vote_average,\n      overview,\n      genres,\n      poster_path,\n      release_date,\n    } = response.data;\n\n    return {\n      original_title,\n      vote_average,\n      overview,\n      genres,\n      poster_path,\n      release_date,\n    };\n  });\n}\nexport async function getCasts(movieId) {\n  const url = ` ${mainURL}movie/${movieId}/credits?api_key=${key}&language=en-US `;\n\n  return axios.get(url).then(response => {\n    return response.data.cast.map(({ id, name, character, profile_path }) => ({\n      id,\n      name,\n      character,\n      profile_path,\n    }));\n  });\n}\n\nexport async function getReview(movieId) {\n  const url = ` ${mainURL}movie/${movieId}/reviews?api_key=${key}&language=en-US `;\n\n  return axios.get(url).then(response => {\n    return response.data.results.map(({ author, content, id }) => ({\n      author,\n      content,\n      id,\n    }));\n  });\n}\n"],"names":["props","movieId","useParams","useState","castInfo","setCast","useEffect","getCasts","then","map","id","name","character","profile_path","src","alt","review","setReview","getReview","length","author","content","loc","className","styles","to","state","from","filmInfo","setFilmInfo","location","useLocation","getMovieInfo","original_title","vote_average","overview","genres","poster_path","release_date","Date","getFullYear","genre","join","path","element","key","mainURL","getPopularMovie","url","axios","response","data","results","getMovie","query","cast"],"sourceRoot":""}