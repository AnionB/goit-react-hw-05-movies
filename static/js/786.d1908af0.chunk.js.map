{"version":3,"file":"static/js/786.d1908af0.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Search/Search.module.css?06df","components/Search/Search.js","services/FetchData.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchThumb\":\"Search_searchThumb__vlLji\"};","import React, { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nimport { getMovie } from '../../services/FetchData';\nimport styles from './Search.module.css';\n\nfunction Search() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [filmList, setFilmList] = useState();\n  const location = useLocation();\n  const [qur, setQur] = useState('');\n\n  useEffect(() => {\n    searchParams.toString() &&\n      getMovie(searchParams.toString()).then(setFilmList);\n  }, [searchParams]);\n  // тут коряво мне кажется, но по другому не придумал\n  useEffect(() => {\n    searchParams.get('query') && setQur(searchParams.get('query'));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function onSubmit(e) {\n    e.preventDefault();\n    e.target.query.value.trim() &&\n      setSearchParams({ query: e.target.query.value });\n    setQur('');\n    // e.target.reset();\n  }\n\n  return (\n    <div className={styles.searchThumb}>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"search\"\n          name={'query'}\n          value={qur}\n          onChange={e => setQur(e.target.value)}\n        />\n        <input type=\"submit\" value={'Search'} />\n      </form>\n      {filmList &&\n        (filmList.length > 0 ? (\n          <ul>\n            {filmList.map(({ id, original_title }) => (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {original_title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>Такого фильма нет, попробуй еще раз</p>\n        ))}\n    </div>\n  );\n}\n\nexport default Search;\n","import axios from 'axios';\n\nconst key = '666fc90c25c7aa270f86bc901474e203';\nconst mainURL = 'https://api.themoviedb.org/3/';\n\nexport async function getPopularMovie() {\n  const url = `${mainURL}trending/movie/day?api_key=${key}`;\n\n  return axios.get(url).then(response => {\n    return response.data.results.map(({ id, original_title }) => ({\n      id,\n      original_title,\n    }));\n  });\n}\n\nexport async function getMovie(query) {\n  const url = `${mainURL}search/movie?api_key=${key}&language=en-US&${query}&page=1&include_adult=false`;\n\n  return axios.get(url).then(response => {\n    return response.data.results.map(({ id, original_title }) => ({\n      id,\n      original_title,\n    }));\n  });\n}\n\nexport async function getMovieInfo(movieId) {\n  const url = ` ${mainURL}movie/${movieId}?api_key=${key}&language=en-US`;\n\n  return axios.get(url).then(response => {\n    const {\n      original_title,\n      vote_average,\n      overview,\n      genres,\n      poster_path,\n      release_date,\n    } = response.data;\n\n    return {\n      original_title,\n      vote_average,\n      overview,\n      genres,\n      poster_path,\n      release_date,\n    };\n  });\n}\nexport async function getCasts(movieId) {\n  const url = ` ${mainURL}movie/${movieId}/credits?api_key=${key}&language=en-US `;\n\n  return axios.get(url).then(response => {\n    return response.data.cast.map(({ id, name, character, profile_path }) => ({\n      id,\n      name,\n      character,\n      profile_path,\n    }));\n  });\n}\n\nexport async function getReview(movieId) {\n  const url = ` ${mainURL}movie/${movieId}/reviews?api_key=${key}&language=en-US `;\n\n  return axios.get(url).then(response => {\n    return response.data.results.map(({ author, content, id }) => ({\n      author,\n      content,\n      id,\n    }));\n  });\n}\n"],"names":["useSearchParams","searchParams","setSearchParams","useState","filmList","setFilmList","location","useLocation","qur","setQur","useEffect","toString","getMovie","then","get","className","styles","onSubmit","e","preventDefault","target","query","value","trim","type","name","onChange","length","map","id","original_title","to","state","from","key","mainURL","getPopularMovie","url","axios","response","data","results","getMovieInfo","movieId","vote_average","overview","genres","poster_path","release_date","getCasts","cast","character","profile_path","getReview","author","content"],"sourceRoot":""}